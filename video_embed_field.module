<?php

/**
 * Provides a simple field for easily embedding videos from youtube or vimeo
 *
 * This module is not intended to replace media or video - it does not allow for any local storage of videos, custom players or anything else
 * It simply allows users to embed videos from youtube and vimeo - and provides a hook to allow other modules to provide more providers.
 *
 * Uses CTools Export UI to manage settings. @see ./plugins/export_ui/video_embed_field_export_ui.inc
 *
 * @author jec006, jdelaune
 */

/**
 * Implements hook_menu().
 */
function video_embed_field_menu() {
  $items = array();

  $items['admin/config/media/video-embed-styles'] = array(
    'title' => 'Video embed styles',
    'description' => 'Configure styles that can be used for resizing or adjusting embedded videos.',
    'route_name' => 'video_embed.style_list',
  );

  return $items;
}

/**
 * Implements hook_menu_link_defaults().
 */
function video_embed_field_menu_link_defaults() {
  $links['video_embed.admin.media.image-styles'] = array(
    'link_title' => 'Video embed styles',
    'description' => 'Configure styles that can be used for resizing or adjusting embedded videos.',
    'parent' => 'system.admin.config.media',
    'route_name' => 'video_embed.style_list',
  );

  return $links;
}

/**
 * Implements hook_permission().
 */
function video_embed_field_permission() {
  return array(
    'administer video embed styles' => array(
      'title' => t('Administer video embed styles'),
      'description' => t('Create and modify styles for embedded videos.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function video_embed_field_theme() {
  return array(
    'video_embed_field_embed_code' => array(
      'template' => 'video-embed-field-embed-code',
      'variables' => array('url' => NULL, 'style' => 'normal', 'video_data' => array()),
    ),
    'video_embed_field_colorbox_code' => array(
      'variables' => array('image_url' => NULL, 'image_style' => 'normal', 'video_url' => NULL, 'video_style' => NULL, 'video_data' => array()),
    ),
  );
}

/**
 * Get the thumbnail url for a given video url
 * @param $url - the url of the video
 * @return a string representing the url of the thumbnail, or FALSE on error
 */
function video_embed_field_thumbnail_url($url) {
  $handler = video_embed_get_provider($url);
  if ($handler && isset($handler['thumbnail_function']) && function_exists($handler['thumbnail_function'])) {
    $info = call_user_func($handler['thumbnail_function'], $url);
    $info['handler'] = $handler['name'];
    return $info;
  }
  return FALSE;
}

/**
 * Get a video data array for a given video url
 *
 * @param string $url
 *   A video URL of the data array you want returned
 *
 * @return array|false $data
 *   An array of video data, or FALSE on error
 */
function video_embed_field_get_video_data($url) {
  $handler = video_embed_get_provider($url);
  if ($handler && isset($handler['data_function']) && function_exists($handler['data_function'])) {
    $data = call_user_func($handler['data_function'], $url);
    $data['handler'] = $handler['name'];
    return $data;
  }
  return FALSE;
}


